CREATE VIEW attendance_eligibility AS
SELECT stu_id, course_code, type, COUNT(status)/15 *100 AS "80% Percentage",
IF((COUNT(status)/15*100)>=80, "Eligible", "Not Eligible") AS "Eligibility"
FROM attendance
WHERE status = "Present" AND type IN ("Theory","Practical")
GROUP BY stu_id,course_code,type;

CREATE PROCEDURE attendance_percentage(
	IN a_stu_id VARCHAR(20),
	IN a_course_code VARCHAR(20),
)
BEGIN
	SELECT
    	stu_id,
        course_code,
        status,
        (COUNT(status)/15 *100) AS attendance_percentage
	FROM attendance
    WHERE stu_id = a_stu_id AND course_code = a_course_code
    GROUP BY a_stu_id, a_course_code,status;
END;

CALL attendance_percentage('ST/2022/028','ICT1221')

UPDATE attendance
SET status = 'Absent'
WHERE stu_id = 'ST/2022/029' AND date='2024-08-27';

UPDATE user
SET user_id = 'ST/2021/025'
WHERE user_id = 'ST/2020/025';

UPDATE attendance
SET status = 'Absent'
WHERE stu_id = 'ST/2022/029' AND course_code = 'ENG1212' AND date="2024-09-25";

CREATE VIEW batch_attendance_summary AS
SELECT 
    stu_id AS "Registration No", 
    course_code, 
    COUNT(status) / 15 * 100 AS "Percentage",
    IF((COUNT(status) / 15 * 100) >= 80, "Eligible", "Not Eligible") AS "Eligibility"
FROM attendance
WHERE status = "Present" AND type IN ("theory", "practical")
GROUP BY stu_id, course_code;


CREATE VIEW batch_attendance_summary AS
SELECT 
    stu_id, 
    course_code, 
    COUNT(status) / 15 * 100 AS "Percentage",
    IF((COUNT(status) / 15 * 100) >= 80, "Eligible", "Not Eligible") AS "Eligibility"
FROM attendance
WHERE status = "Present" AND type IN ("theory", "practical")
GROUP BY stu_id, course_code;


CREATE VIEW student_attendance_summary AS
SELECT 
    stu_id, 
    course_code, 
    COUNT(status) / 15 * 100 AS "Percentage",
    IF((COUNT(status) / 15 * 100) >= 80, "Eligible", "Not Eligible") AS "Eligibility"
FROM attendance
WHERE status = "Present" AND type IN ("theory", "practical")
GROUP BY stu_id, course_code;




--from jayani:

CREATE VIEW ca_marks AS
SELECT 
    stu_id,
    course_code,
    (
        COALESCE(CAST(quiz1 AS DECIMAL(5,2)), 0) * 0.10 + 
        COALESCE(CAST(quiz2 AS DECIMAL(5,2)), 0) * 0.10 + 
        COALESCE(CAST(quiz3 AS DECIMAL(5,2)), 0) * 0.10 + 
        COALESCE(CAST(assessment AS DECIMAL(5,2)), 0) * 0.20 + 
        COALESCE(CAST(mid_theory AS DECIMAL(5,2)), 0) * 0.25 + 
        COALESCE(CAST(mid_practical AS DECIMAL(5,2)), 0) * 0.25
    ) AS ca_mark
FROM 
    exam_marks;



SELECT * FROM ca_marks;


CREATE VIEW overall_eligibility AS
SELECT 
    a.stu_id,
    a.course_code,
    a.type,
    CASE 
        WHEN a.Eligibility = "Eligible" AND c.ca_mark >= 40 THEN "Eligible"
        ELSE "Not Eligible"
    END AS eligibility_status
FROM 
    attendance_eligibility AS a
JOIN 
    ca_marks AS c 
ON 
    a.stu_id = c.stu_id 
    AND a.course_code = c.course_code;


INSERT INTO eligibility (stu_id, course_code, type, status)
SELECT 
    a.stu_id,
    a.course_code,
    a.type,
    CASE 
        WHEN a.Eligibility = "Eligible" AND c.ca_mark >= 40 THEN "Eligible"
        ELSE "Not Eligible"
    END AS eligibility_status
FROM 
    attendance_eligibility AS a
JOIN 
    ca_marks AS c 
ON 
    a.stu_id = c.stu_id 
    AND a.course_code = c.course_code
GROUP BY a.stu_id, a.course_code, a.type;

ALTER TABLE eligibility
ALTER COLUMN status VARCHAR(20);